#+TITLE: Rasp Leds V2
#+AUTHOR: Davis Schenkenberger

* Goals
** TODO API Control
*** Endpoints
- Pattern
- On/Off/Toggle
- Command History?
- Custom Pattern
  Be able to set individual LEDs then add movements

** DONE Hardware or Simulation based on feature
** TODO Pattern [3/7]
*** DONE Meteor
*** DONE Moving Dot
*** DONE Rainbow
*** TODO Heart Rate
Connecting to watch using ANT+
*** TODO Timer
*** TODO Alarm
*** TODO Custom
** TODO ENV File for settings
** TODO Logging
** DONE Error Handling
*** TODO Fix json

* Design
** Parts
*** [[file:src/controller/controller.rs::pub trait LedController {][Controller]]
A higher level abstraction for controlling an LED Strip, whether on hardware or virtual
*** Runner
An abstraction that provides a way to control the led strip using
*** Diagram
#+begin_src dot :file temp.png
digraph {
    subgraph cluster_thread_one {
        label="Webserver Thread";
        req[label="Request"];
        webserver[label="Server"];
        webserver -> req;
    }

    subgraph cluster_thread_two {
        label="Led Manager Thread";
        resp[label="Response"];
        main_loop[label="Main Loop"];
        resp -> webserver;
        main_loop -> main_loop;
        main_loop -> resp;
        req -> main_loop;
    }

}
#+end_src

#+RESULTS:
[[file:temp.png]]

* Scratch
** Changing value in enum
#+begin_src rust
#[derive(Debug)]
enum Stuff {
    _Other,
    Value { num: u64 },
}

fn main() {
    let mut thing = Stuff::Value { num: 10 };

    println!("First: {thing:?}");

    if let Stuff::Value { ref mut num } = thing {
        *num += 1;
    }

    println!("Second: {thing:?}");
}
#+end_src
** Requests
#+NAME: ip
#+begin_src text
0.0.0.0:8080
#+end_src

+NAME: ip
#+begin_src text
192.168.8.176:8080
#+end_src
*** Patterns
**** Meteor
#+begin_src restclient :noweb yes
POST http://<<ip>>/api/pattern
Content-Type: application/json

{"pattern": "meteor", "tick_rate":100,"tick_cycle":150,"color":{"RGB":[255,0,255]},"random_decay":true,"decay":32,"size":18}
#+end_src

#+RESULTS:
#+BEGIN_SRC js
// POST http://0.0.0.0:8080/api/pattern
// HTTP/1.1 200 OK
// server: Rocket
// x-content-type-options: nosniff
// x-frame-options: SAMEORIGIN
// permissions-policy: interest-cohort=()
// content-length: 0
// date: Sun, 27 Feb 2022 05:35:19 GMT
// Request duration: 0.065343s
#+END_SRC

**** Moving Dot
#+begin_src restclient :noweb yes
POST http://<<ip>>/api/pattern
Content-Type: application/json

{"pattern": "moving_dot", "tick_rate":100,"tick_cycle":150,"color":{"RGB":[255,0,255]}}
#+end_src

#+RESULTS:
#+BEGIN_SRC js
// POST http://0.0.0.0:8080/api/pattern
// HTTP/1.1 200 OK
// server: Rocket
// x-frame-options: SAMEORIGIN
// permissions-policy: interest-cohort=()
// x-content-type-options: nosniff
// content-length: 0
// date: Sun, 27 Feb 2022 05:41:53 GMT
// Request duration: 0.015608s
#+END_SRC
**** Rainbow
#+begin_src restclient :noweb yes
POST http://<<ip>>/api/pattern
Content-Type: application/json

{"pattern": "rainbow_cycle", "tick_rate":50}
#+end_src

#+RESULTS:
#+BEGIN_SRC js
// POST http://0.0.0.0:8080/api/pattern
// HTTP/1.1 200 OK
// server: Rocket
// x-frame-options: SAMEORIGIN
// permissions-policy: interest-cohort=()
// x-content-type-options: nosniff
// content-length: 0
// date: Sun, 27 Feb 2022 05:41:56 GMT
// Request duration: 0.018713s
#+END_SRC

*** On
#+begin_src restclient :noweb yes
POST http://<<ip>>/api/on
#+end_src

#+RESULTS:
#+BEGIN_SRC js
// POST http://0.0.0.0:8080/api/on
// HTTP/1.1 200 OK
// server: Rocket
// x-frame-options: SAMEORIGIN
// x-content-type-options: nosniff
// permissions-policy: interest-cohort=()
// content-length: 0
// date: Sun, 27 Feb 2022 05:37:57 GMT
// Request duration: 0.006783s
#+END_SRC

*** Off
#+begin_src restclient :noweb yes
POST http://<<ip>>/api/off
#+end_src

#+RESULTS:
#+BEGIN_SRC js
// POST http://0.0.0.0:8080/api/off
// HTTP/1.1 200 OK
// server: Rocket
// x-frame-options: SAMEORIGIN
// x-content-type-options: nosniff
// permissions-policy: interest-cohort=()
// content-length: 0
// date: Sun, 27 Feb 2022 05:37:54 GMT
// Request duration: 0.056823s
#+END_SRC

*** Power
#+begin_src restclient :noweb yes
POST http://<<ip>>/api/power
#+end_src

#+RESULTS:
#+BEGIN_SRC js
{
  "error": "NoHistory"
}
// POST http://0.0.0.0:8080/api/power
// HTTP/1.1 200 OK
// content-type: application/json
// server: Rocket
// x-content-type-options: nosniff
// x-frame-options: SAMEORIGIN
// permissions-policy: interest-cohort=()
// content-length: 21
// date: Sun, 27 Feb 2022 05:39:27 GMT
// Request duration: 0.007133s
#+END_SRC

#+RESULTS:

*** History
#+begin_src restclient :noweb yes
GET http://<<ip>>/api/history
#+end_src

#+RESULTS:
#+BEGIN_SRC js
[
  {
    "type": "Pattern",
    "pattern": "rainbow_cycle",
    "tick_rate": 50
  },
  {
    "type": "Pattern",
    "pattern": "moving_dot",
    "tick_rate": 100,
    "tick_cycle": 150,
    "color": {
      "RGB": [
        255,
        0,
        255
      ]
    }
  }
]
// GET http://0.0.0.0:8080/api/history
// HTTP/1.1 200 OK
// content-type: application/json
// server: Rocket
// x-frame-options: SAMEORIGIN
// permissions-policy: interest-cohort=()
// x-content-type-options: nosniff
// content-length: 164
// date: Sun, 27 Feb 2022 05:42:03 GMT
// Request duration: 0.066465s
#+END_SRC
